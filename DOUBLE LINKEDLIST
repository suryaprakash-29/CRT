class node:
    def __init__(self,data):
        self.data=data
        self.next=None
        self.prev=None
class doublelinkedlist:
    def __init__(self):
        self.head=self.tail=None
    def create(self,data):
        n=node(data)
        if self.head==None:
            self.head=self.tail=n
        else:
            self.tail.next=n
            n.prev=self.tail
            self.tail=n
    def forwardshow(self):
        if self.head==None:
            print("list is empty")
        else:
            temp=self.head
            while temp!=None:
                print(temp.data,end=' ')
                temp=temp.next
    def insertfirst(self,data):
        n=node(data)
        if self.head==None:
            self.head=self.tail=n
        else:
            n.next=self.head
            self.head.prev=n
            self.head=n
    def insertpos(self,data,pos):
        n=node(data)
        if self.head==None:
            self.head=self.tail=n
        elif pos==1:
            n.next=self.head
            self.head.prev=n
            self.head=n
        else:
            c=2
            temp=self.head
            while c<pos and temp.next!=None:
                c=c+1
                temp=temp.next
            if temp.next==None:
                self.tail.next=n
                n.prev=self.tail
                self.tail=n
            else:
                n.next=temp.next
                n.prev=temp
                temp.next.prev=n
                temp.next=n
    def delete(self,pos):
        if self.head==None:
            print("list is empty")
        elif pos==1:
            self.head=self.head.next
            self.head.prev=None
        else:
            c=1
            temp=self.head
            while c<pos and temp.next!=None:
                c=c+1
                temp=temp.next
            if temp.next==None:
                self.tail=temp.prev
                self.tail.next=None
            else:
                temp.next.prev=temp.prev
                temp.prev.next=temp.next   
    def backwardshow(self):
        if self.head==None:
            print("list is empty")
        else:
            temp=self.tail
            while temp:
                print(temp.data,end=" ")
                temp=temp.prev
    def reverse(self):
        temp=self.head
        temp2=self.head.next
        temp.next=None
        temp.prev=temp2
        while temp2:
            temp2.prev=temp2.next
            temp2.next=temp
            temp=temp2
            temp2=temp2.prev
        self.head=temp

d=doublelinkedlist()
while True:
    print("\n 1.create 2.show 3.backshow 4.insertfirst 5.insrtpos 6.delete 7.reverese")
    a=int(input())
    if a==1:
        print('enter element')
        b=int(input())
        d.create(b)
    elif a==2:
        d.forwardshow()
    elif a==3:
        d.backwardshow()
    elif a==4:
        print("enter element")
        b=int(input())
        d.insertfirst(b)
    elif a==5:
        b=int(input('enter element'))
        c=int(input('enter pos'))
        d.insertpos(b,c)
    elif a==6:
        pos=int(input('enter element'))
        d.delete(pos)
    elif a==7:
        d.reverse()
    else:
        print('invalid choice2')
